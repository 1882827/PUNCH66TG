local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local whitelist = {
    ["SadNii4"] = true,
    ["82iwkwjw3"] = true,
    ["EternaIKing_ofc"] = true,
    ["EternalQueen_ofc"] = true,
    ["OfEternal_king"] = true,
    ["OfEternal_queen"] = true,
    ["PROPLAYER292827"] = true,
    ["ilvieharbor73"] = true,
    ["TOQUIO_94"] = true,
    ["TOQUIO_944"] = true,
    ["ARMY_S0LDIER8"] = true,
    ["dorrido13"] = true,
    ["PEBUGADOTUTORIAL"] = true,
    ["TheLittle8Prince"] = true,
    ["Italo444hzx"] = true,
    ["NOOB_SEUPESADELO"] = true,
    ["Voa_Passarinho8"] = true,
    ["SadNii0"] = true,
    ["NeezXIX"] = true,
    ["Nicke_Nii"] = true,
    ["User21"] = true,
    ["User22"] = true,
    ["User23"] = true,
    ["User24"] = true,
    ["User25"] = true,
    ["User26"] = true,
    ["User27"] = true,
    ["User28"] = true,
    ["User29"] = true,
    ["User30"] = true,
    ["User31"] = true,
    ["User32"] = true,
    ["User33"] = true,
    ["User34"] = true,
    ["User35"] = true,
    ["User36"] = true,
    ["User37"] = true,
    ["User38"] = true,
    ["User39"] = true
}

if not whitelist[LocalPlayer.Name] then
    LocalPlayer:Kick("VocÃª nÃ£o estÃ¡ na whitelist para usar este script.")
    return
end

print("UsuÃ¡rio autorizado:", LocalPlayer.Name)

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/MlFrvWM/BBLT81/main/BL81827TC", true))()

local window = library:AddWindow("1987 Private", {
    main_color = Color3.fromRGB(9, 12, 217),
    min_size = Vector2.new(550, 450),
    can_resize = false,
})

local function setFontRecursive(guiObject, font)
    for _, obj in pairs(guiObject:GetDescendants()) do
        if obj:IsA("TextLabel") or obj:IsA("TextButton") or obj:IsA("TextBox") then
            obj.Font = font
        end
    end
end

spawn(function()
    repeat wait() until window.gui
    setFontRecursive(window.gui, Enum.Font.SourceSansBold)
end)

local Killing = window:AddTab("Killer")

tabKilling:AddButton("Remove Attack Animations", function()
    local blockedAnimations = {
        ["rbxassetid://3638729053"] = true,
        ["rbxassetid://3638767427"] = true,
    }

    local function setupAnimationBlocking()
        local char = game.Players.LocalPlayer.Character
        if not char or not char:FindFirstChild("Humanoid") then return end
        local humanoid = char:FindFirstChild("Humanoid")
        for _, track in pairs(humanoid:GetPlayingAnimationTracks()) do
            if track.Animation then
                local animId = track.Animation.AnimationId
                local animName = track.Name:lower()
                if blockedAnimations[animId] or animName:match("punch") or animName:match("attack") or animName:match("right") then
                    track:Stop()
                end
            end
        end
        if not _G.AnimBlockConnection then
            local connection = humanoid.AnimationPlayed:Connect(function(track)
                if track.Animation then
                    local animId = track.Animation.AnimationId
                    local animName = track.Name:lower()
                    if blockedAnimations[animId] or animName:match("punch") or animName:match("attack") or animName:match("right") then
                        track:Stop()
                    end
                end
            end)
            _G.AnimBlockConnection = connection
        end
    end

    local function overrideToolActivation()
        local function processTool(tool)
            if tool and (tool.Name == "Punch" or tool.Name:match("Attack") or tool.Name:match("Right")) then
                if not tool:GetAttribute("ActivatedOverride") then
                    tool:SetAttribute("ActivatedOverride", true)
                    local connection = tool.Activated:Connect(function()
                        task.wait(0.05)
                        local char = game.Players.LocalPlayer.Character
                        if char and char:FindFirstChild("Humanoid") then
                            for _, track in pairs(char.Humanoid:GetPlayingAnimationTracks()) do
                                if track.Animation then
                                    local animId = track.Animation.AnimationId
                                    local animName = track.Name:lower()
                                    if blockedAnimations[animId] or animName:match("punch") or animName:match("attack") or animName:match("right") then
                                        track:Stop()
                                    end
                                end
                            end
                        end
                    end)
                    if not _G.ToolConnections then
                        _G.ToolConnections = {}
                    end
                    _G.ToolConnections[tool] = connection
                end
            end
        end

        for _, tool in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            processTool(tool)
        end

        local char = game.Players.LocalPlayer.Character
        if char then
            for _, tool in pairs(char:GetChildren()) do
                if tool:IsA("Tool") then
                    processTool(tool)
                end
            end
        end

        if not _G.BackpackAddedConnection then
            _G.BackpackAddedConnection = game.Players.LocalPlayer.Backpack.ChildAdded:Connect(function(child)
                if child:IsA("Tool") then
                    task.wait(0.1)
                    processTool(child)
                end
            end)
        end

        if not _G.CharacterToolAddedConnection and char then
            _G.CharacterToolAddedConnection = char.ChildAdded:Connect(function(child)
                if child:IsA("Tool") then
                    task.wait(0.1)
                    processTool(child)
                end
            end)
        end
    end

    setupAnimationBlocking()
    overrideToolActivation()

    if not _G.AnimMonitorConnection then
        _G.AnimMonitorConnection = game:GetService("RunService").Heartbeat:Connect(function()
            if tick() % 0.5 < 0.01 then
                local char = game.Players.LocalPlayer.Character
                if char and char:FindFirstChild("Humanoid") then
                    for _, track in pairs(char.Humanoid:GetPlayingAnimationTracks()) do
                        if track.Animation then
                            local animId = track.Animation.AnimationId
                            local animName = track.Name:lower()
                            if blockedAnimations[animId] or animName:match("punch") or animName:match("attack") or animName:match("right") then
                                track:Stop()
                            end
                        end
                    end
                end
            end
        end)
    end

    if not _G.CharacterAddedConnection then
        _G.CharacterAddedConnection = game.Players.LocalPlayer.CharacterAdded:Connect(function(newChar)
            task.wait(1)
            setupAnimationBlocking()
            overrideToolActivation()
            if _G.CharacterToolAddedConnection then
                _G.CharacterToolAddedConnection:Disconnect()
            end
            _G.CharacterToolAddedConnection = newChar.ChildAdded:Connect(function(child)
                if child:IsA("Tool") then
                    task.wait(0.1)
                    processTool(child)
                end
            end)
        end)
    end
end)

function RecoveryPunch()
    if _G.AnimBlockConnection then
        _G.AnimBlockConnection:Disconnect()
        _G.AnimBlockConnection = nil
    end
    if _G.AnimMonitorConnection then
        _G.AnimMonitorConnection:Disconnect()
        _G.AnimMonitorConnection = nil
    end
    if _G.ToolConnections then
        for _, conn in pairs(_G.ToolConnections) do
            if conn then conn:Disconnect() end
        end
        _G.ToolConnections = nil
    end
    if _G.BackpackAddedConnection then
        _G.BackpackAddedConnection:Disconnect()
        _G.BackpackAddedConnection = nil
    end
    if _G.CharacterToolAddedConnection then
        _G.CharacterToolAddedConnection:Disconnect()
        _G.CharacterToolAddedConnection = nil
    end
    if _G.CharacterAddedConnection then
        _G.CharacterAddedConnection:Disconnect()
        _G.CharacterAddedConnection = nil
    end
end

tabKilling:AddButton("Recovery Punch", function()
    RecoveryPunch()
end)
